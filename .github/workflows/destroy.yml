name: Terraform Destroy Workflow for EKS

on:
  workflow_dispatch:
    inputs:
      environment:
        description: 'Environment to deploy (e.g., development, production)'
        required: true
        default: 'development'

jobs:
  plan:
    name: Terraform Plan
    runs-on: self-hosted
    defaults:
      run:
        working-directory: .
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Ensure Plugin Cache Directory Exists
        run: mkdir -p /home/ubuntu/.terraform.d/plugin-cache

      - name: Cache Terraform Plugin Directory
        uses: actions/cache@v4
        with:
          path: /home/ubuntu/.terraform.d/plugin-cache
          key: ${{ runner.os }}-terraform-${{ hashFiles('**/*.tf') }}

      - name: Terraform Init with Backend Config
        env:
          TF_PLUGIN_CACHE_DIR: /home/ubuntu/.terraform.d/plugin-cache
        run: terraform init -backend-config=./environments/${{ github.event.inputs.environment }}/backend.tfvars

      - name: Terraform Plan
        run: terraform plan -var-file=./environments/${{ github.event.inputs.environment }}/main.tfvars -out=tfplan


     
      # - name: Notify Slack on Plan Success
      #   if: success()
      #   env:
      #       SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
      #   run: |
      #       curl -X POST -H 'Content-type: application/json' \
      #       --data '{"text":"‚úÖ Terraform *PLAN* succeeded in *${{ github.event.inputs.environment }}* environment."}' \
      #       "$SLACK_WEBHOOK_URL"


      # - name: Notify Slack on Plan Failure
      #   if: failure()
      #   env:
      #       SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
      #   run: |
      #       curl -X POST -H 'Content-type: application/json' \
      #        --data '{"text":"‚ùå Terraform *PLAN* failed in *${{ github.event.inputs.environment }}* environment. Check run: https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}"}' \
      #       "$SLACK_WEBHOOK_URL"
  destroy:
    name: Terraform Destroy (Needs Approval)
    runs-on: self-hosted
    needs: plan
    environment:
      name: ${{ github.event.inputs.environment }}
      url: https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}
    defaults:
      run:
        working-directory: .
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Ensure Plugin Cache Directory Exists
        run: mkdir -p /home/ubuntu/.terraform.d/plugin-cache

      - name: Cache Terraform Plugin Directory
        uses: actions/cache@v4
        with:
          path: /home/ubuntu/.terraform.d/plugin-cache
          key: ${{ runner.os }}-terraform-${{ hashFiles('**/*.tf') }}

      - name: Terraform Init with Backend Config
        env:
          TF_PLUGIN_CACHE_DIR: /home/ubuntu/.terraform.d/plugin-cache
        run: terraform init -backend-config=./environments/${{ github.event.inputs.environment }}/backend.tfvars
        
      - name: Terraform Destroy
        run: terraform destroy -var-file=./environments/${{ github.event.inputs.environment }}/main.tfvars -auto-approve

      # - name: Notify Slack on Destroy Success
      #   if: success()
      #   env:
      #       SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
      #       ENVIRONMENT: ${{ github.event.inputs.environment }}
      #   run: |
      #       curl -X POST -H 'Content-type: application/json' \
      #       --data "{\"text\":\"‚úÖ Terraform *DESTROY* completed in *$ENVIRONMENT* environment.\"}" \
      #       "$SLACK_WEBHOOK_URL"



      # - name: Notify Slack on Destroy Failure
      #   if: failure()
      #   env:
      #       SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
      #       ENVIRONMENT: ${{ github.event.inputs.environment }}
      #       RUN_URL: https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}
      #   run: |
      #       curl -X POST -H 'Content-type: application/json' \
      #       --data "{\"text\":\"‚ùå Terraform *DESTROY* failed in *$ENVIRONMENT* environment.\nüîç Check run: $RUN_URL\"}" \
      #       "$SLACK_WEBHOOK_URL"



# Ingrate slack for plan apply destroy to get notifications